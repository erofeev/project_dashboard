import { Injectable, signal } from '@angular/core';

export interface Notification {
  id: string;
  type: 'success' | 'error' | 'warning' | 'info';
  title: string;
  message?: string;
  duration?: number; // –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö, 0 = –Ω–µ –∏—Å—á–µ–∑–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  timestamp: Date;
  action?: {
    label: string;
    callback: () => void;
  };
}

@Injectable({
  providedIn: 'root'
})
export class NotificationService {
  
  // === REACTIVE STATE ===
  public notifications = signal<Notification[]>([]);
  
  // === –ù–ê–°–¢–†–û–ô–ö–ò –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ ===
  private defaultDurations = {
    success: 4000,  // 4 —Å–µ–∫—É–Ω–¥—ã
    info: 5000,     // 5 —Å–µ–∫—É–Ω–¥
    warning: 6000,  // 6 —Å–µ–∫—É–Ω–¥
    error: 8000     // 8 —Å–µ–∫—É–Ω–¥ (–¥–æ–ª—å—à–µ –¥–ª—è –æ—à–∏–±–æ–∫)
  };

  private maxNotifications = 5; // –ú–∞–∫—Å–∏–º—É–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞ —ç–∫—Ä–∞–Ω–µ
  
  // === –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´ ===
  
  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
   */
  success(title: string, message?: string, duration?: number): string {
    return this.show({
      type: 'success',
      title,
      message,
      duration: duration || this.defaultDurations.success
    });
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   */
  error(title: string, message?: string, duration?: number): string {
    return this.show({
      type: 'error',
      title,
      message,
      duration: duration || this.defaultDurations.error
    });
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
   */
  warning(title: string, message?: string, duration?: number): string {
    return this.show({
      type: 'warning',
      title,
      message,
      duration: duration || this.defaultDurations.warning
    });
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  info(title: string, message?: string, duration?: number): string {
    return this.show({
      type: 'info',
      title,
      message,
      duration: duration || this.defaultDurations.info
    });
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –¥–µ–π—Å—Ç–≤–∏–µ–º
   */
  showWithAction(
    type: Notification['type'],
    title: string,
    message: string,
    actionLabel: string,
    actionCallback: () => void
  ): string {
    return this.show({
      type,
      title,
      message,
      duration: 0, // –ù–µ –∏—Å—á–µ–∑–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      action: {
        label: actionLabel,
        callback: actionCallback
      }
    });
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  private show(options: {
    type: Notification['type'];
    title: string;
    message?: string;
    duration?: number;
    action?: Notification['action'];
  }): string {
    
    const notification: Notification = {
      id: this.generateId(),
      type: options.type,
      title: options.title,
      message: options.message,
      duration: options.duration || this.defaultDurations[options.type],
      timestamp: new Date(),
      action: options.action
    };

    // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const currentNotifications = this.notifications();
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const updatedNotifications = [notification, ...currentNotifications].slice(0, this.maxNotifications);
    this.notifications.set(updatedNotifications);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (–µ—Å–ª–∏ duration > 0)
    if (notification.duration && notification.duration > 0) {
      setTimeout(() => {
        this.remove(notification.id);
      }, notification.duration);
    }

    console.log(`üì¢ ${notification.type.toUpperCase()}: ${notification.title}`, notification.message || '');
    
    return notification.id;
  }

  /**
   * –£–¥–∞–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ ID
   */
  remove(id: string): void {
    const currentNotifications = this.notifications();
    const updatedNotifications = currentNotifications.filter(n => n.id !== id);
    this.notifications.set(updatedNotifications);
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  clear(): void {
    this.notifications.set([]);
  }

  /**
   * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
   */
  clearByType(type: Notification['type']): void {
    const currentNotifications = this.notifications();
    const updatedNotifications = currentNotifications.filter(n => n.type !== type);
    this.notifications.set(updatedNotifications);
  }

  // === –£–¢–ò–õ–ò–¢–´ ===
  
  private generateId(): string {
    return `notification_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  getIconForType(type: Notification['type']): string {
    switch (type) {
      case 'success': return '‚úÖ';
      case 'error': return '‚ùå';
      case 'warning': return '‚ö†Ô∏è';
      case 'info': return '‚ÑπÔ∏è';
      default: return 'üì¢';
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç CSS –∫–ª–∞—Å—Å –¥–ª—è —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  getStyleClassForType(type: Notification['type']): string {
    return `notification-${type}`;
  }

  // === –ü–†–ï–î–£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===

  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
   */
  configSaved(): void {
    this.success(
      '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞', 
      '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ —Å–∏—Å—Ç–µ–º–µ'
    );
  }

  configError(error: string): void {
    this.error(
      '–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏',
      `–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: ${error}`
    );
  }

  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è ERM –æ–ø–µ—Ä–∞—Ü–∏–π
   */
  ermConnectionSuccess(): void {
    this.success(
      'ERM —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ',
      'API –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ'
    );
  }

  ermConnectionError(error: string): void {
    this.error(
      '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ERM',
      error
    );
  }

  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –¥–∞–Ω–Ω—ã–º–∏
   */
  dataLoaded(count: number, type: string): void {
    this.success(
      '–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã',
      `–ü–æ–ª—É—á–µ–Ω–æ ${count} –∑–∞–ø–∏—Å–µ–π (${type})`
    );
  }

  dataLoadError(type: string, error: string): void {
    this.error(
      `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${type}`,
      error
    );
  }

  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
   */
  fileExported(filename: string): void {
    this.success(
      '–§–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω',
      `–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ ${filename}`
    );
  }

  fileImported(filename: string): void {
    this.success(
      '–§–∞–π–ª –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω',
      `–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ ${filename}`
    );
  }
}
