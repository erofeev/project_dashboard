const nano = require('nano');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ CouchDB
const COUCHDB_URL = 'http://admin:admin123@localhost:5984';
const dbNames = ['users', 'projects', 'time_entries', 'invoices', 'payments', 'settings'];

async function initializeCouchDB() {
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CouchDB...');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ CouchDB
    const couch = nano(COUCHDB_URL);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
    const existingDbs = await couch.db.list();
    console.log('üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', existingDbs);
    
    // –°–æ–∑–¥–∞–µ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    for (const dbName of dbNames) {
      if (!existingDbs.includes(dbName)) {
        try {
          await couch.db.create(dbName);
          console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '${dbName}' —Å–æ–∑–¥–∞–Ω–∞`);
        } catch (error) {
          console.log(`‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '${dbName}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞:`, error.message);
        }
      } else {
        console.log(`‚ÑπÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '${dbName}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö users
    const usersDb = couch.use('users');
    try {
      await usersDb.createIndex({
        index: { fields: ['email', 'role', 'direction'] },
        name: 'users-email-role-direction'
      });
      console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è users —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
      console.log('‚ÑπÔ∏è  –ò–Ω–¥–µ–∫—Å –¥–ª—è users —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö projects
    const projectsDb = couch.use('projects');
    try {
      await projectsDb.createIndex({
        index: { fields: ['direction', 'status', 'startDate'] },
        name: 'projects-direction-status-date'
      });
      console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è projects —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
      console.log('‚ÑπÔ∏è  –ò–Ω–¥–µ–∫—Å –¥–ª—è projects —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö time_entries
    const timeEntriesDb = couch.use('time_entries');
    try {
      await timeEntriesDb.createIndex({
        index: { fields: ['projectId', 'userId', 'date'] },
        name: 'time-entries-project-user-date'
      });
      console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è time_entries —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
      console.log('‚ÑπÔ∏è  –ò–Ω–¥–µ–∫—Å –¥–ª—è time_entries —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö invoices
    const invoicesDb = couch.use('invoices');
    try {
      await invoicesDb.createIndex({
        index: { fields: ['projectId', 'status', 'dueDate'] },
        name: 'invoices-project-status-due'
      });
      console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è invoices —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
      console.log('‚ÑπÔ∏è  –ò–Ω–¥–µ–∫—Å –¥–ª—è invoices —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤–æ–≥–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminUser = {
      _id: 'admin@admin.ru',
      email: 'admin@admin.ru',
      password: 'admin', // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–µ—à
      role: 'superadmin',
      name: '–°—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      direction: 'system',
      isActive: true,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    
    try {
      await usersDb.insert(adminUser);
      console.log('‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
      if (error.statusCode === 409) {
        console.log('‚ÑπÔ∏è  –°—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      } else {
        console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error.message);
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
    const systemSettings = {
      _id: 'system_settings',
      companyName: 'Wone IT - Business Solutions',
      defaultCurrency: 'RUB',
      workingDaysPerMonth: 22,
      timeTrackingEnabled: true,
      integrations: {
        openproject: { enabled: false, url: '', apiKey: '' },
        erm: { enabled: false, url: '', apiKey: '' }
      },
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    
    try {
      await couch.use('settings').insert(systemSettings);
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');
    } catch (error) {
      if (error.statusCode === 409) {
        console.log('‚ÑπÔ∏è  –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç');
      } else {
        console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error.message);
      }
    }
    
    console.log('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CouchDB –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö:');
    
    for (const dbName of dbNames) {
      try {
        const dbInfo = await couch.use(dbName).info();
        console.log(`   ${dbName}: ${dbInfo.doc_count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`);
      } catch (error) {
        console.log(`   ${dbName}: –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CouchDB:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initializeCouchDB();
