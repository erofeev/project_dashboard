import { Component, signal } from '@angular/core';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-time-entries',
  standalone: true,
  imports: [CommonModule],
  template: `
    <!-- TIME ENTRIES REPORT - –í–†–ï–ú–ï–ù–ù–ê–Ø –ó–ê–ì–õ–£–®–ö–ê -->
    <div class="time-entries-container glass-card">
      <h2 class="section-title">
        {{ currentLang() === 'ru' ? '‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏' : '‚è∞ Time Entries' }}
      </h2>
      
      <div class="report-placeholder">
        <h3>{{ currentLang() === 'ru' ? 'üöÄ –ó–¥–µ—Å—å –±—É–¥–µ—Ç AG-Grid —Ç–∞–±–ª–∏—Ü–∞' : 'üöÄ AG-Grid Table will be here' }}</h3>
        
        <div class="features-preview">
          <h4>{{ currentLang() === 'ru' ? '–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:' : 'Planned features:' }}</h4>
          <ul>
            <li>{{ currentLang() === 'ru' ? '‚úÖ AG-Grid —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ ERM' : '‚úÖ AG-Grid table with ERM data' }}</li>
            <li>{{ currentLang() === 'ru' ? '‚úÖ –ì–∏–±—Ä–∏–¥–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ (–æ–∫–ª–∞–¥ + –ø–æ—á–∞—Å–æ–≤–∞—è)' : '‚úÖ Hybrid cost calculation (salary + hourly)' }}</li>
            <li>{{ currentLang() === 'ru' ? '‚úÖ –§–∏–ª—å—Ç—Ä—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –ø—Ä–æ–µ–∫—Ç–∞–º, –¥–∞—Ç–∞–º' : '‚úÖ Filters by users, projects, dates' }}</li>
            <li>{{ currentLang() === 'ru' ? '‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel/CSV' : '‚úÖ Export to Excel/CSV' }}</li>
            <li>{{ currentLang() === 'ru' ? '‚úÖ Slicers –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏' : '‚úÖ Interactive slicers for filtering' }}</li>
          </ul>
        </div>
        
        <div class="next-steps">
          <p><strong>
            {{ currentLang() === 'ru' ? 'üëâ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ ERM –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∞—Ö' : 'üëâ Next step: configure ERM connection in Settings' }}
          </strong></p>
          <a routerLink="/settings" class="setup-btn">
            {{ currentLang() === 'ru' ? '‚öôÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º' : '‚öôÔ∏è Go to Settings' }}
          </a>
        </div>
      </div>
      
    </div>
  `,
  styles: [`
    .time-entries-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }
    
    .report-placeholder {
      text-align: center;
      padding: 2rem;
      background: rgba(255, 255, 255, 0.05);
      border-radius: 12px;
      margin: 1rem 0;
    }
    
    .features-preview {
      margin: 2rem 0;
      text-align: left;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }
    
    .features-preview ul {
      list-style: none;
      padding: 0;
    }
    
    .features-preview li {
      margin: 0.5rem 0;
      padding: 0.3rem 0;
    }
    
    .next-steps {
      margin-top: 2rem;
      padding: 1rem;
      background: rgba(16, 185, 129, 0.1);
      border: 1px solid rgba(16, 185, 129, 0.3);
      border-radius: 8px;
    }
    
    .setup-btn {
      display: inline-block;
      margin-top: 1rem;
      padding: 0.8rem 1.5rem;
      background: rgba(99, 102, 241, 0.1);
      border: 1px solid rgba(99, 102, 241, 0.3);
      border-radius: 8px;
      text-decoration: none;
      color: #6366f1;
      font-weight: 600;
      transition: all 0.3s ease;
      
      &:hover {
        background: rgba(99, 102, 241, 0.2);
        transform: translateY(-2px);
      }
    }
  `]
})
export class TimeEntriesComponent {
  public currentLang = signal('ru');

  constructor() {
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
    const savedLang = localStorage.getItem('preferredLanguage') || 'ru';
    this.currentLang.set(savedLang);
    
    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞
    window.addEventListener('storage', (e) => {
      if (e.key === 'preferredLanguage' && e.newValue) {
        this.currentLang.set(e.newValue);
      }
    });
  }
}
