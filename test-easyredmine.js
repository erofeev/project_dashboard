const { spawn } = require('child_process');
const path = require('path');

// –ü—É—Ç—å –∫ MCP —Å–µ—Ä–≤–µ—Ä—É
const mcpServerPath = path.join(__dirname, 'infrastructure/mcp-server/easyredmine-mcp-server/dist/easyredmine-index.js');

// –ó–∞–ø—É—Å–∫–∞–µ–º MCP —Å–µ—Ä–≤–µ—Ä
const mcpServer = spawn('node', [mcpServerPath], {
  stdio: ['pipe', 'pipe', 'pipe']
});

// MCP –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
const listToolsRequest = {
  jsonrpc: "2.0",
  id: 1,
  method: "tools/list",
  params: {}
};

// MCP –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
const getProjectsRequest = {
  jsonrpc: "2.0",
  id: 2,
  method: "tools/call",
  params: {
    name: "get_projects",
    arguments: {
      limit: 10,
      offset: 0
    }
  }
};

let toolsList = null;

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞ —Å–µ—Ä–≤–µ—Ä–∞
mcpServer.stdout.on('data', (data) => {
  try {
    const response = JSON.parse(data.toString());
    console.log('üì° MCP Response:', JSON.stringify(response, null, 2));
    
    if (response.method === 'tools/list') {
      toolsList = response.result;
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤');
      
      // –¢–µ–ø–µ—Ä—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
      console.log('üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã...');
      mcpServer.stdin.write(JSON.stringify(getProjectsRequest) + '\n');
    }
    
    if (response.method === 'tools/call') {
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –ø—Ä–æ–µ–∫—Ç—ã –∏–∑ EasyRedmine');
      mcpServer.kill();
    }
  } catch (error) {
    console.log('üìù Raw output:', data.toString());
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
mcpServer.stderr.on('data', (data) => {
  console.log('‚ùå MCP Server Error:', data.toString());
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
mcpServer.on('close', (code) => {
  console.log(`üîö MCP Server exited with code ${code}`);
});

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º MCP —Å–µ—Ä–≤–µ—Ä EasyRedmine...');
console.log('üìã –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...');
mcpServer.stdin.write(JSON.stringify(listToolsRequest) + '\n');

// –¢–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
setTimeout(() => {
  console.log('‚è∞ –¢–∞–π–º–∞—É—Ç, –∑–∞–≤–µ—Ä—à–∞–µ–º...');
  mcpServer.kill();
}, 10000);
